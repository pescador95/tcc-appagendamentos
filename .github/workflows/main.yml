name: Build Tests and Deploy at Oracle Cloud

on:
  push:
    branches:
      - main

jobs:
  db:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Build Postgres Database Container
        run: docker-compose -f docker-compose.yml build db

  redis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Build Postgres Database Container
        run: docker-compose -f docker-compose.yml build redis

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Build Quarkus Backend Container
        run: docker-compose -f docker-compose.yml build backend

  telegram:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Build API Telegram Container
        run: docker-compose -f docker-compose.yml build telegram

  whatsapp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env.example
        run: cp .env.example .env

      - name: Build API Whatsapp Container
        run: docker-compose -f docker-compose.yml build whatsapp

  deploy:
    needs: [db, redis, backend, telegram, whatsapp]
    runs-on: ubuntu-latest

    env:
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_SERVER: ${{ secrets.SSH_SERVER }}
      SSH_SERVER_KEY: ${{ secrets.SSH_SERVER_KEY }}
      REPOSITORY_PATH: ${{ secrets.REPOSITORY_PATH }}

    steps:
      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan $SSH_SERVER >> ~/.ssh/known_hosts

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_SERVER_KEY }}

      - name: Deploy at Oracle Cloud
        run: |
          ssh $SSH_USERNAME@$SSH_SERVER "sudo su -c 'cd ~/${REPOSITORY_PATH} && git checkout main && git pull'"

      - name: Connect to Oracle Server and Run Commands to Deploy
        run: |
          ssh $SSH_USERNAME@$SSH_SERVER "sudo su -c 'cd ~/${REPOSITORY_PATH} && chmod +x ~/${REPOSITORY_PATH}/run.sh && ./run.sh'"

      - name: Reset run.sh changes
        run: |
          ssh $SSH_USERNAME@$SSH_SERVER "sudo su -c 'cd ~/${REPOSITORY_PATH} && git checkout -- run.sh'"
